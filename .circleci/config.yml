version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: circleci/php:7.0-fpm-node-browsers
      - image: k1sul1/circleci-wordpress:0.0.1
        environment:
          - WP_TEST_URL: "http://localhost:8080/"
          - WP_TEST_USER: "test"
          - WP_TEST_USER_PASS: "test"
          - WP_ENV: "ci"
          - MYSQL_ALLOW_EMPTY_PASSWORD: true,
          - MYSQL_DATABASE: "circle_test"
          - MYSQL_HOST: "127.0.0.1"
          - DB_HOST: "127.0.0.1"
          - DB_USER: "root"
          - DB_PASSWORD: ""
          - DB_NAME: "circle_test"

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:5.7.22-ram

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          - v1-dependencies-{{ checksum "package.json" }}

          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Preparations
          command: |
            # sudo apt-get install pv mysql-client sshpass
            # sudo docker-php-ext-install mysqli pdo pdo_mysql # WTF, why aren't these installed already?
            composer install -n --prefer-dist --no-dev

      - run:
          name: Build frontend
          command: |
            cd wordpress/html/wp-content/themes/perfect-portfolio
            npm install # Builds using prod conf

      - run:
          name: Deploy
          command: |
            # Handle restarting nginx and so on...
            if [ $CIRCLE_BRANCH == 'master' ]; then
              sshpass -d rsync -av --progress --exclude='node_modules' --delete --exclude='*/wp-content/uploads/*' -d 'ssh -T -o Compression=no -o StrictHostKeyChecking=no -p 10349' ~/repo/ USER@TARGET.domain:/data/wordpress
            fi

            if [ $CIRCLE_BRANCH == 'production' ]; then
              sshpass -d rsync -av --progress --exclude='node_modules' --delete --exclude='*/wp-content/uploads/*' -d 'ssh -T -o Compression=no -o StrictHostKeyChecking=no -p 10298' ~/repo/ USER@TARGET.domain:/data/wordpress
            fi

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - ./vendor

  # What's the point of running a separate job for this? Deploy will fail if the build fails.
  # This is just much slower. So let's not use it, for now.

  # deploy:
    # working_directory: ~/repo
    # docker:
      # - image: circleci/php:7.0-fpm-node-browsers
      # - image: circleci/mysql:latest

    # steps:
      # - run:
          # name: Deploy to staging
          # command: |
            # sudo apt-get install sshpass
            # sshpass -e scp -r -P 10349 USER@TARGET.domain:/data/wordpress ~/repo

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      # - deploy:
          # requires:
            # - build
          # filters:
            # branches:
              # only: master
